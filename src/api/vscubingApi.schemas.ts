/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Vscubing Api
 * vscubing Api
 * OpenAPI spec version: 0.0.0
 */
/**
 * Unspecified request body
 */
export type ContestsSolvesCreateCreateBodyThree = { [key: string]: unknown }

/**
 * Unspecified request body
 */
export type ContestsSolvesCreateCreateBodyTwo = { [key: string]: unknown }

/**
 * Unspecified request body
 */
export type ContestsSolvesCreateCreateBodyOne = { [key: string]: unknown }

export type ContestsSolvesCreateCreateParams = {
  /**
   * contest id
   */
  contestId: number
  /**
   * discipline id
   */
  disciplineId: number
  /**
   * scramble id
   */
  scrambleId: number
}

export type ContestsSolvesBestOfEveryUserRetrieveParams = {
  /**
   * discipline_slug
   */
  discipline: string
}

export type ContestsRoundSessionsWithSolvesRetrieveOrderBy =
  (typeof ContestsRoundSessionsWithSolvesRetrieveOrderBy)[keyof typeof ContestsRoundSessionsWithSolvesRetrieveOrderBy]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsRoundSessionsWithSolvesRetrieveOrderBy = {
  '-avg_ms': '-avg_ms',
  avg_ms: 'avg_ms',
} as const

export type ContestsRoundSessionsWithSolvesRetrieveParams = {
  /**
   * contest id
   */
  contestId: number
  /**
   * discipline id
   */
  disciplineId: number
  /**
   * order by something
   */
  orderBy?: ContestsRoundSessionsWithSolvesRetrieveOrderBy
}

export type ContestsOngoingContestSubmittedSolvesRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug?: string
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsOngoingContestCurrentSolveRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsContestsRetrieveOrderBy =
  (typeof ContestsContestsRetrieveOrderBy)[keyof typeof ContestsContestsRetrieveOrderBy]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsContestsRetrieveOrderBy = {
  '-created_at': '-created_at',
  created_at: 'created_at',
} as const

export type ContestsContestsRetrieveParams = {
  /**
   * count of contest to be returned
   */
  limit?: number
  /**
   * offset
   */
  offset?: number
  /**
   * order by something
   */
  orderBy?: ContestsContestsRetrieveOrderBy
}

export interface InlineSerializer {
  id: number
  username: string
}

export interface ContestsSolveCreateOutput {
  createdAt: string
  id: number
  scramble: InlineSerializer
  timeMs: number
}

export interface ContestsRoundSessionWithSolvesListOutput {
  avgMs: number
  contest: InlineSerializer
  createdAt: string
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: InlineSerializer[]
  updatedAt: string
  user: InlineSerializer
}

export interface TokenRefresh {
  readonly access: string
  refresh: string
}

export interface SocialLogin {
  accessToken?: string
  code?: string
  idToken?: string
}

export interface Output {
  endDate: string
  id: number
  name: string
  slug: string
  startDate: string
}
