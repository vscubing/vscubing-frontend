/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Vscubing Api
 * vscubing Api
 * OpenAPI spec version: 0.0.0
 */
export type ContestsSolvesSingleResultLeaderboardRetrieveParams = {
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsOngoingContestSolveCreateCreateParams = {
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * scramble_id
   */
  scrambleId: number
}

export type ContestsOngoingContestCurrentRoundSessionProgressRetrieveParams = {
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsOngoingContestSubmitCreateAction =
  (typeof ContestsOngoingContestSubmitCreateAction)[keyof typeof ContestsOngoingContestSubmitCreateAction]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsOngoingContestSubmitCreateAction = {
  change_to_extra: 'change_to_extra',
  submit: 'submit',
} as const

export type ContestsOngoingContestSubmitCreateParams = {
  /**
   * action
   */
  action: ContestsOngoingContestSubmitCreateAction
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsContestsLeaderboardRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsContestsRetrieveParams = {
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export interface ContestsSolveRetrieveOutput {
  contest: S01j35c2exeekn1db03rrgtc93n
  discipline: S01j35c2exeg172wths3023tgk4
  id: number
  isDnf: boolean
  reconstruction: string
  scramble: S01j35c2exeb8ftbhkh00nrs3zq
  submissionState: string
  timeMs: number
  user: S01j35c2exern594fp81rba2jtq
}

export interface ContestsSolveListBestInEveryDiscipline {
  contest: S01j35c2exe1vc4g2wg26rydrmr
  createdAt: string
  discipline: S01j35c2exf13r64aqz832p8xm6
  id: number
  scramble: S01j35c2exe9wgdg45xjjbs0jz6
  timeMs: number
  user: S01j35c2exenkx3r3amr8qk0h97
}

export interface ContestsSingleResultLeaderboardOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j35c2exhtew1myhzcgtqre8e
}

export interface ContestsRoundSessionWithSolvesListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j35c2exgw1p0h6vqhnpz6xc7
}

export interface ContestsCurrentSolveOutput {
  currentSolve: S01j35c2exg4mecgp6evgeymt3v
  submittedSolveSet?: S01j35c2exgcx71w7k2f8frmgrh[]
}

export interface ContestsCreateSolveOutput {
  createdAt: string
  id: number
  isDnf: boolean
  scramble: S01j35c2exf7tvqaddgrtfv0rfg
  timeMs: number
}

export interface ContestsCreateSolveInput {
  isDnf: boolean
  reconstruction?: string
  timeMs?: number
}

export interface ContestsContestListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j35c2exgbfz27vqh8cc72x2z[]
}

export interface AccountsGoogleLoginOutput {
  access: string
  refresh: string
  user: S01j35c2ewpwkr4xsya25qbz2ts
}

export interface AccountsGoogleLoginInput {
  code: string
}

export interface AccountsCurrentUserOutput {
  id: number
  isVerified: boolean
  username: string
}

export interface AccountsChangeUsernameInput {
  /**
   * @minLength 3
   * @maxLength 20
   * @pattern ^[a-zA-Z0-9_]*$
   */
  username: string
}

export interface TokenRefresh {
  readonly access: string
  refresh: string
}

export interface S01j35c2exhtew1myhzcgtqre8e {
  ownResult?: S01j35c2exh69xxaa207j0tzntg
  solveSet: S01j35c2exhame74b314616pnr2[]
}

export interface S01j35c2exhtctf77zrmva4f2zq {
  id: number
  slug: string
}

export interface S01j35c2exhb4jrabga5g0q91yq {
  contest: S01j35c2exh0kvsqamvejwcav2d
  createdAt: string
  id: number
  isDnf: boolean
  timeMs: number
  user: S01j35c2exh7fpwm8ek6fs97rnp
}

export interface S01j35c2exhb03f018qv30xmdns {
  contest: S01j35c2exhtctf77zrmva4f2zq
  createdAt: string
  id: number
  isDnf: boolean
  timeMs: number
}

export interface S01j35c2exhame74b314616pnr2 {
  place: number
  solve: S01j35c2exhb4jrabga5g0q91yq
}

export interface S01j35c2exh7fpwm8ek6fs97rnp {
  id: number
  username: string
}

export interface S01j35c2exh69xxaa207j0tzntg {
  isDisplayedSeparately: boolean
  page: number
  place: number
  solve: S01j35c2exhb03f018qv30xmdns
}

export interface S01j35c2exh0kvsqamvejwcav2d {
  id: number
  slug: string
}

export interface S01j35c2exgw1p0h6vqhnpz6xc7 {
  ownResult: S01j35c2exfk4h80ge2xem4ggqg
  roundSessionSet: S01j35c2exg2v7g054van8fm75r[]
}

export interface S01j35c2exgpghdrf1nj6wyt1n6 {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j35c2exgdp12vf5eytx1rkhe {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j35c2exgdkm2ekqgyg4atac6 {
  id: number
  isDnf: boolean
  scramble: S01j35c2exgdp12vf5eytx1rkhe
  timeMs: number
}

export interface S01j35c2exgd0hc6rxthzer4n0a {
  extraId: number
  id: number
  isDnf: boolean
  scramble: S01j35c2exg0hwbm0gyx76btmf1
  submissionState: string
  timeMs: number
}

export interface S01j35c2exgcx71w7k2f8frmgrh {
  solve: S01j35c2exgdkm2ekqgyg4atac6
}

export interface S01j35c2exgbfz27vqh8cc72x2z {
  endDate: string
  id: number
  name: string
  slug: string
  startDate: string
}

export interface S01j35c2exg9ze6r98726x8xak3 {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j35c2exg9pgf0qcwt14ht6a3 {
  id: number
  isDnf: boolean
  scramble: S01j35c2exg9ze6r98726x8xak3
  timeMs: number
}

export interface S01j35c2exg6819qvrs9b112g6w {
  avgMs: number
  contest: S01j35c2exf8q1vrqt1gwb59mhb
  createdAt: string
  discipline: S01j35c2exfyb22rem2jbk18ze9
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j35c2exgd0hc6rxthzer4n0a[]
  updatedAt: string
  user: S01j35c2exfcdkzqbfqzx7eht2w
}

export interface S01j35c2exg4mecgp6evgeymt3v {
  canChangeToExtra: boolean
  scramble: S01j35c2exgpghdrf1nj6wyt1n6
  solve?: S01j35c2exg9pgf0qcwt14ht6a3
}

export interface S01j35c2exg2v7g054van8fm75r {
  place?: number
  roundSession: S01j35c2exg6819qvrs9b112g6w
}

export interface S01j35c2exg0hwbm0gyx76btmf1 {
  id: number
  position: string
}

export interface S01j35c2exfyb22rem2jbk18ze9 {
  id: number
}

export interface S01j35c2exfsjd5pdpmy5b2gf6h {
  id: number
}

export interface S01j35c2exfnnwybqwbn03qk6ee {
  id: number
  username: string
}

export interface S01j35c2exfk4h80ge2xem4ggqg {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  roundSession?: S01j35c2exf5xqb7027ykdas421
}

export interface S01j35c2exfe0vh3qbqszc2p03j {
  id: number
  position: string
}

export interface S01j35c2exfcdkzqbfqzx7eht2w {
  id: number
  username: string
}

export interface S01j35c2exfbb1m43s1cmevfg3t {
  id: number
}

export interface S01j35c2exf8q1vrqt1gwb59mhb {
  id: number
}

export interface S01j35c2exf7tvqaddgrtfv0rfg {
  id: number
  moves: string
}

export interface S01j35c2exf5xqb7027ykdas421 {
  avgMs: number
  contest: S01j35c2exfbb1m43s1cmevfg3t
  createdAt: string
  discipline: S01j35c2exfsjd5pdpmy5b2gf6h
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j35c2exf01gwqppjqpmfetf3[]
  updatedAt: string
  user: S01j35c2exfnnwybqwbn03qk6ee
}

export interface S01j35c2exf13r64aqz832p8xm6 {
  id: number
  name: string
  slug: string
}

export interface S01j35c2exf01gwqppjqpmfetf3 {
  extraId: number
  id: number
  isDnf: boolean
  scramble: S01j35c2exfe0vh3qbqszc2p03j
  submissionState: string
  timeMs: number
}

export interface S01j35c2exern594fp81rba2jtq {
  id: number
  username: string
}

export interface S01j35c2exenkx3r3amr8qk0h97 {
  id: number
  username: string
}

export interface S01j35c2exeg172wths3023tgk4 {
  id: number
  slug: string
}

export interface S01j35c2exeekn1db03rrgtc93n {
  id: number
  slug: string
}

export interface S01j35c2exeb8ftbhkh00nrs3zq {
  id: number
  moves: string
  position: number
}

export interface S01j35c2exe9wgdg45xjjbs0jz6 {
  id: number
  moves: string
}

export interface S01j35c2exe1vc4g2wg26rydrmr {
  id: number
  name: string
  slug: string
}

export interface S01j35c2ewpwkr4xsya25qbz2ts {
  email: string
  pk: number
}

export interface OngoingContestRetrieve {
  endDate: string
  id: number
  slug: string
  startDate: string
}

export interface Input {
  idDnf: boolean
}
