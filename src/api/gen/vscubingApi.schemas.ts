/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Vscubing Api
 * vscubing Api
 * OpenAPI spec version: 0.0.0
 */
export type ContestsSolvesSingleResultLeaderboardRetrieveParams = {
  /**
   * discipline slug
   */
  disciplineSlug?: string
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsOngoingContestSolveCreateCreateParams = {
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * scramble_id
   */
  scrambleId: number
}

export type ContestsOngoingContestCurrentRoundSessionProgressRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsOngoingContestSubmitCreateAction =
  (typeof ContestsOngoingContestSubmitCreateAction)[keyof typeof ContestsOngoingContestSubmitCreateAction]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsOngoingContestSubmitCreateAction = {
  change_to_extra: 'change_to_extra',
  submit: 'submit',
} as const

export type ContestsOngoingContestSubmitCreateParams = {
  /**
   * action
   */
  action: ContestsOngoingContestSubmitCreateAction
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsContestsLeaderboardRetrieveOrderBy =
  (typeof ContestsContestsLeaderboardRetrieveOrderBy)[keyof typeof ContestsContestsLeaderboardRetrieveOrderBy]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsContestsLeaderboardRetrieveOrderBy = {
  '-avg_ms': '-avg_ms',
  avg_ms: 'avg_ms',
} as const

export type ContestsContestsLeaderboardRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * order by something
   */
  orderBy?: ContestsContestsLeaderboardRetrieveOrderBy
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsContestsRetrieveParams = {
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export interface ContestsSolveRetrieveOutput {
  contest: S01j1j34jys78e406przcvvrnx2
  discipline: S01j1j34jys4cpc9t9erna28vjp
  id: number
  isDnf: boolean
  reconstruction: string
  roundSession: S01j1j34jyskfspz1a4rm11x8ww
  scramble: S01j1j34jysqdh575gb82jan2m3
  submissionState: string
  timeMs: number
  user: S01j1j34jys3cydt7gd78kh083q
}

export interface ContestsSolveListBestInEveryDiscipline {
  contest: S01j1j34jytybtvxz7fce0c02zr
  createdAt: string
  discipline: S01j1j34jyt5jm4bpxzf8v13195
  id: number
  scramble: S01j1j34jytq4ppa2swendnwr7q
  timeMs: number
  user: S01j1j34jytdj0gzs7w7e56kray
}

export interface ContestsSingleResultLeaderboardOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j1j34jywn69dqb4c0jbzg967
}

export interface ContestsRoundSessionWithSolvesListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j1j34jyvw3wkepgmzv3b1w5j
}

export interface ContestsCurrentSolveOutput {
  currentSolve: S01j1j34jyvnqcg0t8zysapvs73
  submittedSolveSet?: S01j1j34jyw3xk41a4xz6dqyxjp[]
}

export interface ContestsCreateSolveOutput {
  createdAt: string
  id: number
  isDnf: boolean
  scramble: S01j1j34jytd16zrb4e9j16s3z0
  timeMs: number
}

export interface ContestsCreateSolveInput {
  isDnf: boolean
  reconstruction: string
  timeMs: number
}

export interface ContestsContestListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j1j34jyv8gb7xhp00wj6rac7[]
}

export interface AccountsGoogleLoginOutput {
  access: string
  refresh: string
  user: S01j1j34jyj69s0esmfb42m44zt
}

export interface AccountsGoogleLoginInput {
  code: string
}

export interface AccountsCurrentUserOutput {
  id: number
  isVerified: boolean
  username: string
}

export interface AccountsChangeUsernameInput {
  /**
   * @minLength 3
   * @maxLength 20
   * @pattern ^[a-zA-Z0-9_]*$
   */
  username: string
}

export interface TokenRefresh {
  readonly access: string
  refresh: string
}

export interface S01j1j34jywsyg03rsfhjmy556r {
  place: number
  solve: S01j1j34jyw12pthepwfjpxgbr2
}

export interface S01j1j34jywn69dqb4c0jbzg967 {
  ownResult: S01j1j34jywarzgtxqr3a5m2qc2
  solveSet: S01j1j34jywsyg03rsfhjmy556r[]
}

export interface S01j1j34jywmnmrb45ps4tbpv28 {
  contest: S01j1j34jyw7cg9xq63wskac05f
  createdAt: string
  id: number
  isDnf: boolean
  reconstruction: string
  submissionState: string
  timeMs: number
}

export interface S01j1j34jywfpmkxkw60r1andn1 {
  id: number
  slug: string
}

export interface S01j1j34jywarzgtxqr3a5m2qc2 {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  solve?: S01j1j34jywmnmrb45ps4tbpv28
}

export interface S01j1j34jyw8z77vyzfb12mr9q5 {
  id: number
  username: string
}

export interface S01j1j34jyw7cg9xq63wskac05f {
  id: number
  slug: string
}

export interface S01j1j34jyw6tjw4c56dqykgyhk {
  id: number
}

export interface S01j1j34jyw3xk41a4xz6dqyxjp {
  solve: S01j1j34jyv03q02wyy4cnxhg8d
}

export interface S01j1j34jyw12pthepwfjpxgbr2 {
  contest: S01j1j34jywfpmkxkw60r1andn1
  createdAt: string
  id: number
  isDnf: boolean
  reconstruction: string
  scramble: S01j1j34jyw6tjw4c56dqykgyhk
  submissionState: string
  timeMs: number
  user: S01j1j34jyw8z77vyzfb12mr9q5
}

export interface S01j1j34jyvwt9f4pwrcnyj88ck {
  extraId: number
  id: number
  isDnf: boolean
  scramble: S01j1j34jyvcs1axt6e09m5h3bm
  submissionState: string
  timeMs: number
}

export interface S01j1j34jyvvncwbzkkj2p1h5rn {
  id: number
}

export interface S01j1j34jyvqewc0h00gkmcy427 {
  id: number
}

export interface S01j1j34jyvp8k6s132s7v53ahm {
  id: number
  isDnf: boolean
  scramble: string
  timeMs: number
}

export interface S01j1j34jyvm3x9xdxwhgfn1fdf {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j1j34jyvnqcg0t8zysapvs73 {
  canChangeToExtra: boolean
  scramble: S01j1j34jyvm3x9xdxwhgfn1fdf
  solve: S01j1j34jyvp8k6s132s7v53ahm
}

export interface S01j1j34jyvcs1axt6e09m5h3bm {
  id: number
  position: string
}

export interface S01j1j34jyvaamgmv0mshvszh65 {
  place?: number
  roundSession: S01j1j34jyv2zktrn1gtwcw7s2f
}

export interface S01j1j34jyv8gb7xhp00wj6rac7 {
  endDate: string
  id: number
  name: string
  slug: string
  startDate: string
}

export interface S01j1j34jyv52qyp2a1gkfvbvjz {
  id: number
  username: string
}

export interface S01j1j34jyv2zktrn1gtwcw7s2f {
  avgMs: number
  contest: S01j1j34jyvqewc0h00gkmcy427
  createdAt: string
  discipline: S01j1j34jyvvncwbzkkj2p1h5rn
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j1j34jyvwt9f4pwrcnyj88ck[]
  updatedAt: string
  user: S01j1j34jyv52qyp2a1gkfvbvjz
}

export interface S01j1j34jyv03q02wyy4cnxhg8d {
  id: number
  isDnf: boolean
  scramble: string
  timeMs: number
}

export interface S01j1j34jytybtvxz7fce0c02zr {
  id: number
  name: string
  slug: string
}

export interface S01j1j34jytxyv6h6xv8caxngs4 {
  extraId: number
  id: number
  isDnf: boolean
  scramble: S01j1j34jyt7z07ykav6vavdc69
  submissionState: string
  timeMs: number
}

export interface S01j1j34jytwnmxnsqc4pcj6w9q {
  avgMs: number
  contest: S01j1j34jytfdv2jgnm75f2chhc
  createdAt: string
  discipline: S01j1j34jytew5trnysdsb4m4ry
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j1j34jytxyv6h6xv8caxngs4[]
  updatedAt: string
  user: S01j1j34jyt7jtyng8ngfg8zemm
}

export interface S01j1j34jytq4ppa2swendnwr7q {
  id: number
  moves: string
}

export interface S01j1j34jytnd02sdx1vqk58tr4 {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  roundSession?: S01j1j34jytwnmxnsqc4pcj6w9q
}

export interface S01j1j34jyvw3wkepgmzv3b1w5j {
  ownResult: S01j1j34jytnd02sdx1vqk58tr4
  roundSessionSet: S01j1j34jyvaamgmv0mshvszh65[]
}

export interface S01j1j34jytfdv2jgnm75f2chhc {
  id: number
}

export interface S01j1j34jytew5trnysdsb4m4ry {
  id: number
}

export interface S01j1j34jytdj0gzs7w7e56kray {
  id: number
  username: string
}

export interface S01j1j34jytd16zrb4e9j16s3z0 {
  id: number
  moves: string
}

export interface S01j1j34jyt7z07ykav6vavdc69 {
  id: number
  position: string
}

export interface S01j1j34jyt7jtyng8ngfg8zemm {
  id: number
  username: string
}

export interface S01j1j34jyt5jm4bpxzf8v13195 {
  id: number
  name: string
  slug: string
}

export interface S01j1j34jysqdh575gb82jan2m3 {
  id: number
}

export interface S01j1j34jyskfspz1a4rm11x8ww {
  id: number
}

export interface S01j1j34jys78e406przcvvrnx2 {
  id: number
}

export interface S01j1j34jys4cpc9t9erna28vjp {
  id: number
}

export interface S01j1j34jys3cydt7gd78kh083q {
  id: number
}

export interface S01j1j34jyj69s0esmfb42m44zt {
  email: string
  pk: number
}

export interface OngoingContestRetrieve {
  endDate: string
  id: number
  slug: string
  startDate: string
}

export interface Input {
  idDnf: boolean
}
