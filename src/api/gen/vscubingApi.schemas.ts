/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Vscubing Api
 * vscubing Api
 * OpenAPI spec version: 0.0.0
 */
export type ContestsSolvesSingleResultLeaderboardRetrieveParams = {
  /**
   * discipline slug
   */
  disciplineSlug?: string
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsOngoingContestSolveCreateCreateParams = {
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * scramble_id
   */
  scrambleId: number
}

export type ContestsOngoingContestCurrentRoundSessionProgressRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
}

/**
 * Unspecified response body
 */
export type ContestsOngoingContestSubmitCreate200 = { [key: string]: unknown }

export type ContestsOngoingContestSubmitCreateAction =
  (typeof ContestsOngoingContestSubmitCreateAction)[keyof typeof ContestsOngoingContestSubmitCreateAction]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsOngoingContestSubmitCreateAction = {
  change_to_extra: 'change_to_extra',
  submit: 'submit',
} as const

export type ContestsOngoingContestSubmitCreateParams = {
  /**
   * action
   */
  action: ContestsOngoingContestSubmitCreateAction
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsContestsLeaderboardRetrieveOrderBy =
  (typeof ContestsContestsLeaderboardRetrieveOrderBy)[keyof typeof ContestsContestsLeaderboardRetrieveOrderBy]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsContestsLeaderboardRetrieveOrderBy = {
  '-avg_ms': '-avg_ms',
  avg_ms: 'avg_ms',
} as const

export type ContestsContestsLeaderboardRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * order by something
   */
  orderBy?: ContestsContestsLeaderboardRetrieveOrderBy
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsContestsRetrieveParams = {
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export interface ContestsSolveRetrieveOutput {
  contest: S01j18cpec8djjrmqsctss96htz
  discipline: S01j18cpec8t8be64x2wf5exeks
  id: number
  isDnf: boolean
  reconstruction: string
  roundSession: S01j18cpec8hfscgzz0b233gtm8
  scramble: S01j18cpec8en5d66qdr04svxgy
  submissionState: string
  timeMs: number
  user: S01j18cpec8j4veqdap41w1vrsh
}

export interface ContestsSolveListBestInEveryDiscipline {
  contest: S01j18cpec9c4qhqhm5cja8nbpc
  createdAt: string
  discipline: S01j18cpec9x5s2crkwc2amkak8
  id: number
  scramble: S01j18cpec9vpzysk74a9mh8hpc
  timeMs: number
  user: S01j18cpec828jn14dmaqqz5j1n
}

export interface ContestsSingleResultLeaderboardOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j18cpecbs6dc4dmaa0gf4mzt
}

export interface ContestsCurrentSolveOutput {
  currentSolve: S01j18cpeca68dxn85af1f150gq
  submittedSolveSet?: S01j18cpecawsmzg2z7f69vpmm7[]
}

export interface ContestsCreateSolveOutput {
  createdAt: string
  id: number
  isDnf: boolean
  scramble: S01j18cpec9qrv4h0trsadewhtw
  timeMs: number
}

export interface ContestsCreateSolveInput {
  isDnf: boolean
  reconstruction: string
  timeMs: number
}

export interface AccountsGoogleLoginOutput {
  access: string
  refresh: string
  user: S01j18cpebh434a529bjkh0mz5n
}

export interface AccountsGoogleLoginInput {
  code: string
}

export interface AccountsCurrentUserOutput {
  id: number
  isVerified: boolean
  username: string
}

export interface AccountsChangeUsernameInput {
  /**
   * @minLength 3
   * @maxLength 20
   * @pattern ^[a-zA-Z0-9_]*$
   */
  username: string
}

export interface TokenRefresh {
  readonly access: string
  refresh: string
}

export interface S01j18cpecbx5tdqb0xkpxrgfqm {
  id: number
}

export interface S01j18cpecbs6dc4dmaa0gf4mzt {
  ownResult: S01j18cpecbbb5cn069rxbn0fjx
  solveSet: S01j18cpecbpes3dmkm7wpkhh6k[]
}

export interface S01j18cpecbqnqett3hezmtpk74 {
  id: number
  username: string
}

export interface S01j18cpecbq7emxacw31mzej76 {
  id: number
  slug: string
}

export interface S01j18cpecb6y03wt561r3b02a8 {
  contest: S01j18cpecamxd0f0ptwthegja2
  createdAt: string
  id: number
  isDnf: boolean
  reconstruction: string
  submissionState: string
  timeMs: number
}

export interface S01j18cpecbbb5cn069rxbn0fjx {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  solve?: S01j18cpecb6y03wt561r3b02a8
}

export interface S01j18cpecb182tgmn71ax73h1b {
  contest: S01j18cpecbq7emxacw31mzej76
  createdAt: string
  id: number
  isDnf: boolean
  reconstruction: string
  scramble: S01j18cpecbx5tdqb0xkpxrgfqm
  submissionState: string
  timeMs: number
  user: S01j18cpecbqnqett3hezmtpk74
}

export interface S01j18cpecbpes3dmkm7wpkhh6k {
  place: number
  solve: S01j18cpecb182tgmn71ax73h1b
}

export interface S01j18cpecawsmzg2z7f69vpmm7 {
  solve: S01j18cpeca48e9y6hxdg5r67sc
}

export interface S01j18cpecamxd0f0ptwthegja2 {
  id: number
  slug: string
}

export interface S01j18cpecamt3qjbh75r7b8qwh {
  avgMs: number
  contest: S01j18cpec9g4sdcvsgk5171w18
  createdAt: string
  discipline: S01j18cpec98rctfgmbmz1sbpjs
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j18cpeca10f8ask2kspvpsmq[]
  updatedAt: string
  user: S01j18cpec9z743fxaqt80p0bzb
}

export interface S01j18cpecaak5fn5kszfspr45j {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j18cpeca68dxn85af1f150gq {
  canChangeToExtra: boolean
  scramble: S01j18cpecaak5fn5kszfspr45j
  solve: S01j18cpeca2gekkhaf3r2nsx2k
}

export interface S01j18cpeca48e9y6hxdg5r67sc {
  id: number
  isDnf: boolean
  scramble: string
  timeMs: number
}

export interface S01j18cpeca39z5ktzpnanmbvtg {
  place?: number
  roundSession: S01j18cpecamt3qjbh75r7b8qwh
}

export interface S01j18cpeca2gekkhaf3r2nsx2k {
  id: number
  isDnf: boolean
  scramble: string
  timeMs: number
}

export interface S01j18cpeca29ywqhjvh1vfrq6s {
  ownResult: S01j18cpec9m5vdpjxg5hzddkxp
  roundSessionSet: S01j18cpeca39z5ktzpnanmbvtg[]
}

export interface ContestsRoundSessionWithSolvesListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j18cpeca29ywqhjvh1vfrq6s
}

export interface S01j18cpeca28jsdmpxg4ez0f34 {
  endDate: string
  id: number
  name: string
  slug: string
  startDate: string
}

export interface ContestsContestListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j18cpeca28jsdmpxg4ez0f34[]
}

export interface S01j18cpeca10f8ask2kspvpsmq {
  extraId: number
  id: number
  isDnf: boolean
  submissionState: string
}

export interface S01j18cpec9z743fxaqt80p0bzb {
  id: number
  username: string
}

export interface S01j18cpec9x5s2crkwc2amkak8 {
  id: number
  name: string
  slug: string
}

export interface S01j18cpec9vpzysk74a9mh8hpc {
  id: number
  moves: string
}

export interface S01j18cpec9tp3178sca9tk0g6j {
  avgMs: number
  contest: S01j18cpec9cxb1wt1yd1s4vpg1
  createdAt: string
  discipline: S01j18cpec9p6rtwcvy1b9n8x6a
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j18cpec9hqxdqpedqgr9ds85[]
  updatedAt: string
  user: S01j18cpec9894xp70vjsz8r2p6
}

export interface S01j18cpec9qrv4h0trsadewhtw {
  id: number
  moves: string
}

export interface S01j18cpec9p6rtwcvy1b9n8x6a {
  id: number
}

export interface S01j18cpec9m5vdpjxg5hzddkxp {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  roundSession?: S01j18cpec9tp3178sca9tk0g6j
}

export interface S01j18cpec9hqxdqpedqgr9ds85 {
  extraId: number
  id: number
  isDnf: boolean
  submissionState: string
}

export interface S01j18cpec9g4sdcvsgk5171w18 {
  id: number
}

export interface S01j18cpec9cxb1wt1yd1s4vpg1 {
  id: number
}

export interface S01j18cpec9c4qhqhm5cja8nbpc {
  id: number
  name: string
  slug: string
}

export interface S01j18cpec98rctfgmbmz1sbpjs {
  id: number
}

export interface S01j18cpec9894xp70vjsz8r2p6 {
  id: number
  username: string
}

export interface S01j18cpec8t8be64x2wf5exeks {
  id: number
}

export interface S01j18cpec8j4veqdap41w1vrsh {
  id: number
}

export interface S01j18cpec8hfscgzz0b233gtm8 {
  id: number
}

export interface S01j18cpec8en5d66qdr04svxgy {
  id: number
}

export interface S01j18cpec8djjrmqsctss96htz {
  id: number
}

export interface S01j18cpec828jn14dmaqqz5j1n {
  id: number
  username: string
}

export interface S01j18cpebh434a529bjkh0mz5n {
  email: string
  pk: number
}

export interface OngoingContestRetrieve {
  endDate: string
  id: number
  slug: string
  startDate: string
}
