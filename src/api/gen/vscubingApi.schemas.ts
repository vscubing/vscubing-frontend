/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Vscubing Api
 * vscubing Api
 * OpenAPI spec version: 0.0.0
 */
export type ContestsSolvesSingleResultLeaderboardRetrieveParams = {
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsOngoingContestSolveCreateCreateParams = {
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * scramble_id
   */
  scrambleId: number
}

export type ContestsOngoingContestCurrentRoundSessionProgressRetrieveParams = {
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsOngoingContestSubmitCreateAction =
  (typeof ContestsOngoingContestSubmitCreateAction)[keyof typeof ContestsOngoingContestSubmitCreateAction]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsOngoingContestSubmitCreateAction = {
  change_to_extra: 'change_to_extra',
  submit: 'submit',
} as const

export type ContestsOngoingContestSubmitCreateParams = {
  /**
   * action
   */
  action: ContestsOngoingContestSubmitCreateAction
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsDevOwnRoundSessionDeleteDestroy401 = { [key: string]: unknown }

export type ContestsContestsLeaderboardRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsContestsRetrieveParams = {
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export interface ContestsSolveRetrieveOutput {
  contest: S01j6h5es13k0p98gnfbbwhwp9m
  discipline: S01j6h5es13ynhjk3xj7xamtb2q
  id: number
  isDnf: boolean
  reconstruction: string
  scramble: S01j6h5es139fmyknb8y6qm273n
  submissionState: string
  timeMs: number
  user: S01j6h5es13jh91fq9b8pg3fhes
}

export interface ContestsSolveListBestInEveryDiscipline {
  contest: S01j6h5es13hv14mhgxsmkvj5az
  createdAt: string
  discipline: S01j6h5es13g936xyx5x5sc5zc5
  id: number
  scramble: S01j6h5es13hhx1fh1dtz6x6hev
  timeMs: number
  user: S01j6h5es13epzmdg9vmm6dwk5y
}

export interface ContestsSingleResultLeaderboardOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j6h5es15j1vhzfactdyf405e
}

export interface ContestsRoundSessionWithSolvesListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j6h5es14cef8s1rth1r87dad
}

export interface ContestsCurrentSolveOutput {
  currentSolve: S01j6h5es15cgr20bp2sd3rcsev
  submittedSolveSet?: S01j6h5es158c2dvy1yjx6w63ag[]
}

export interface ContestsCreateSolveOutput {
  createdAt: string
  id: number
  isDnf: boolean
  scramble: S01j6h5es13m2dze3b29sh67gq8
  timeMs: number
}

export interface ContestsCreateSolveInput {
  isDnf: boolean
  reconstruction?: string
  timeMs?: number
}

export interface ContestsContestListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j6h5es142kkv4pfjdy46yx40[]
}

export interface AccountsGoogleLoginOutput {
  access: string
  refresh: string
  user: S01j6h5es0tpdas7pb50mhqqv0h
}

export interface AccountsGoogleLoginInput {
  code: string
}

export interface AccountsCurrentUserOutput {
  id: number
  isVerified: boolean
  username: string
}

export interface AccountsChangeUsernameInput {
  /**
   * @minLength 3
   * @maxLength 20
   * @pattern ^[a-zA-Z0-9_]*$
   */
  username: string
}

export interface TokenRefresh {
  readonly access: string
  refresh: string
}

export interface S01j6h5es15xx58x0ndq3mga7kx {
  id: number
  slug: string
}

export interface S01j6h5es15x9026htep3qam5cy {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j6h5es15twzkgdv1ktjtydtv {
  id: number
  slug: string
}

export interface S01j6h5es15nz8gm9c0esc5s508 {
  id: number
  isDnf: boolean
  scramble: S01j6h5es1563an2evatdmx2k4m
  timeMs: number
}

export interface S01j6h5es15mqhzwhxwbp68vvn3 {
  id: number
  isDnf: boolean
  scramble: S01j6h5es152yaysg1w26y14wpa
  timeMs: number
}

export interface S01j6h5es15mj1httk1ka3zzd93 {
  contest: S01j6h5es15twzkgdv1ktjtydtv
  createdAt: string
  id: number
  isDnf: boolean
  timeMs: number
  user: S01j6h5es15d3dxw3rstcp1n28v
}

export interface S01j6h5es15j1vhzfactdyf405e {
  ownResult?: S01j6h5es1560a3ncgab6kv0jcz
  solveSet: S01j6h5es150s0bs5s4sme1s48k[]
}

export interface S01j6h5es15d3dxw3rstcp1n28v {
  id: number
  username: string
}

export interface S01j6h5es15cgr20bp2sd3rcsev {
  canChangeToExtra: boolean
  scramble: S01j6h5es15x9026htep3qam5cy
  solve?: S01j6h5es15nz8gm9c0esc5s508
}

export interface S01j6h5es159f482m6gb9b2vyw1 {
  contest: S01j6h5es15xx58x0ndq3mga7kx
  createdAt: string
  id: number
  isDnf: boolean
  timeMs: number
}

export interface S01j6h5es158c2dvy1yjx6w63ag {
  solve: S01j6h5es15mqhzwhxwbp68vvn3
}

export interface S01j6h5es1563an2evatdmx2k4m {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j6h5es1560a3ncgab6kv0jcz {
  isDisplayedSeparately: boolean
  page: number
  place: number
  solve: S01j6h5es159f482m6gb9b2vyw1
}

export interface S01j6h5es152yaysg1w26y14wpa {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j6h5es150s0bs5s4sme1s48k {
  place: number
  solve: S01j6h5es15mj1httk1ka3zzd93
}

export interface S01j6h5es14y3pp6wr5rcmecns1 {
  extraId: number
  id: number
  isDnf: boolean
  scramble: S01j6h5es14ctxjwj0pfff4fr1p
  submissionState: string
  timeMs: number
}

export interface S01j6h5es14wjmhfpk6znjad7zb {
  endDate: string
  id: number
  slug: string
  startDate: string
}

export interface S01j6h5es14rq0sayee0jt36g02 {
  extraId: number
  id: number
  isDnf: boolean
  scramble: S01j6h5es142gp1ykmz056vhy1d
  submissionState: string
  timeMs: number
}

export interface S01j6h5es14pzh7xhqnh9hrw1e2 {
  id: number
  username: string
}

export interface S01j6h5es14mqdwxqzpkzqkwt9z {
  place: number
  roundSession: S01j6h5es142pw4x2em46rk197p
}

export interface S01j6h5es14kyjcme1vf8yb775z {
  id: number
  username: string
}

export interface S01j6h5es14ctxjwj0pfff4fr1p {
  id: number
  position: string
}

export interface S01j6h5es14cef8s1rth1r87dad {
  contest: S01j6h5es14wjmhfpk6znjad7zb
  ownResult?: S01j6h5es14083r2ahqc73epjgm
  roundSessionSet: S01j6h5es14mqdwxqzpkzqkwt9z[]
}

export interface S01j6h5es14aphaqj1zbqqtdr9z {
  avgMs: number
  contest: S01j6h5es142xkr36dszzrk1bjd
  createdAt: string
  discipline: S01j6h5es146rze1yb99zep5f6j
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j6h5es14rq0sayee0jt36g02[]
  updatedAt: string
  user: S01j6h5es14pzh7xhqnh9hrw1e2
}

export interface S01j6h5es148tx3zq3zd87mh4rs {
  id: number
}

export interface S01j6h5es146rze1yb99zep5f6j {
  id: number
}

export interface S01j6h5es142xkr36dszzrk1bjd {
  id: number
}

export interface S01j6h5es142pw4x2em46rk197p {
  avgMs: number
  contest: S01j6h5es1410e3xzparvy11qqv
  createdAt: string
  discipline: S01j6h5es148tx3zq3zd87mh4rs
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j6h5es14y3pp6wr5rcmecns1[]
  updatedAt: string
  user: S01j6h5es14kyjcme1vf8yb775z
}

export interface S01j6h5es142kkv4pfjdy46yx40 {
  endDate: string
  id: number
  name: string
  slug: string
  startDate: string
}

export interface S01j6h5es142gp1ykmz056vhy1d {
  id: number
  position: string
}

export interface S01j6h5es1410e3xzparvy11qqv {
  id: number
}

export interface S01j6h5es14083r2ahqc73epjgm {
  isDisplayedSeparately: boolean
  page: number
  place: number
  roundSession: S01j6h5es14aphaqj1zbqqtdr9z
}

export interface S01j6h5es13ynhjk3xj7xamtb2q {
  id: number
  slug: string
}

export interface S01j6h5es13m2dze3b29sh67gq8 {
  id: number
  moves: string
}

export interface S01j6h5es13k0p98gnfbbwhwp9m {
  id: number
  slug: string
}

export interface S01j6h5es13jh91fq9b8pg3fhes {
  id: number
  username: string
}

export interface S01j6h5es13hv14mhgxsmkvj5az {
  id: number
  name: string
  slug: string
}

export interface S01j6h5es13hhx1fh1dtz6x6hev {
  id: number
  moves: string
}

export interface S01j6h5es13g936xyx5x5sc5zc5 {
  id: number
  name: string
  slug: string
}

export interface S01j6h5es13epzmdg9vmm6dwk5y {
  id: number
  username: string
}

export interface S01j6h5es139fmyknb8y6qm273n {
  id: number
  moves: string
  position: string
}

export interface S01j6h5es0tpdas7pb50mhqqv0h {
  email: string
  pk: number
}

export interface OngoingContestRetrieve {
  endDate: string
  id: number
  slug: string
  startDate: string
}

export interface Input {
  idDnf: boolean
}
