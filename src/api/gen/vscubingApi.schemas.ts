/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Vscubing Api
 * vscubing Api
 * OpenAPI spec version: 0.0.0
 */
export type ContestsSolvesSingleResultLeaderboardRetrieveParams = {
  /**
   * how many solves will be on the page
   */
  limit?: number
  /**
   * page number
   */
  page?: number
}

export type ContestsOngoingContestCurrentSolveRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsContestsLeaderboardRetrieveOrderBy =
  (typeof ContestsContestsLeaderboardRetrieveOrderBy)[keyof typeof ContestsContestsLeaderboardRetrieveOrderBy]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsContestsLeaderboardRetrieveOrderBy = {
  '-avg_ms': '-avg_ms',
  avg_ms: 'avg_ms',
} as const

export type ContestsContestsLeaderboardRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * offset
   */
  limit?: number
  /**
   * order by something
   */
  orderBy?: ContestsContestsLeaderboardRetrieveOrderBy
  /**
   * count of contest to be returned
   */
  page?: number
}

export type ContestsContestsRetrieveOrderBy =
  (typeof ContestsContestsRetrieveOrderBy)[keyof typeof ContestsContestsRetrieveOrderBy]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsContestsRetrieveOrderBy = {
  '-created_at': '-created_at',
  created_at: 'created_at',
} as const

export type ContestsContestsRetrieveParams = {
  /**
   * offset
   */
  limit?: number
  /**
   * order by something
   */
  orderBy?: ContestsContestsRetrieveOrderBy
  /**
   * count of contest to be returned
   */
  page?: number
}

export interface ContestsSolveRetrieveOutput {
  contest: S01j0jp78w1n3vy43vscvshc7hv
  discipline: S01j0jp78w1x1j6hfadmznmsfd9
  id: number
  isDnf: boolean
  reconstruction: string
  roundSession: S01j0jp78w19vwcwt3a2hy5khp5
  scramble: S01j0jp78w17qzzc01v58wqga2w
  submissionState: string
  timeMs: number
  user: S01j0jp78w1334t3njtpp90hts2
}

export interface ContestsSolveListBestInEveryDiscipline {
  contest: S01j0jp78w1gyv18gtw8wcab7rj
  createdAt: string
  discipline: S01j0jp78w1dyq3q9xc2pn4n0pk
  id: number
  scramble: S01j0jp78w1bp0r2sgzfmnj1p1v
  timeMs: number
  user: S01j0jp78w1q7yrgh57h1hkcpx3
}

export interface ContestsSingleResultLeaderboardOutput {
  limit: number
  page: number
  pages: number
  results: S01j0jp78w3emqa4x51p8zzzatz
}

export interface ContestsRoundSessionWithSolvesListOutput {
  limit: number
  page: number
  pages: number
  results: S01j0jp78w2gj8vbf042mwcg4jf
}

export interface ContestsCurrentSolveOutput {
  currentSolve: S01j0jp78w3rmrk00vevp4fj1av
  submittedSolveSet?: S01j0jp78w3bynreapzgn6tn9hs[]
}

export interface ContestsContestListOutput {
  count: number
  limit: number
  next: string
  page: number
  previous: string
  results: S01j0jp78w3r86qd1akcq3h7xfy[]
}

export interface AccountsGoogleLoginOutput {
  access: string
  refresh: string
  user: S01j0jp78vtagfeeeah874v20wp
}

export interface AccountsGoogleLoginInput {
  code: string
}

export interface AccountsCurrentUserOutput {
  authCompleted: boolean
  username: string
}

export interface AccountsChangeUsernameInput {
  /**
   * @minLength 3
   * @maxLength 20
   * @pattern ^[a-zA-Z0-9_]*$
   */
  username: string
}

export interface TokenRefresh {
  readonly access: string
  refresh: string
}

export interface S01j0jp78w3xgqggw60nahawyh7 {
  id: number
}

export interface S01j0jp78w3shdy180xbe56rq1q {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  solve?: S01j0jp78w3sxnkhkj604aa3tb8
}

export interface S01j0jp78w3r86qd1akcq3h7xfy {
  endDate: string
  id: number
  name: string
  slug: string
  startDate: string
}

export interface S01j0jp78w3g69v0fw98w9r74ye {
  id: number
}

export interface S01j0jp78w3sxnkhkj604aa3tb8 {
  contest: S01j0jp78w3g69v0fw98w9r74ye
  id: number
  isDnf: boolean
  reconstruction: string
  submissionState: string
  timeMs: number
}

export interface S01j0jp78w3ehb7kmdvwk2k3rb6 {
  id: number
  isDnf: boolean
  scramble: string
  timeMs: number
}

export interface S01j0jp78w3rmrk00vevp4fj1av {
  canChangeToExtra: boolean
  scramble: S01j0jp78w36p4j0105ktx62my2
  solve: S01j0jp78w3ehb7kmdvwk2k3rb6
}

export interface S01j0jp78w3cy564wgr7mswngqs {
  id: number
}

export interface S01j0jp78w3bynreapzgn6tn9hs {
  solve: S01j0jp78w32nb4n1qrpqps0tpc
}

export interface S01j0jp78w385wjj51k0qczwn02 {
  place?: number
  solve: S01j0jp78w3hv80etqdjmacvj2n
}

export interface S01j0jp78w3emqa4x51p8zzzatz {
  ownSolve: S01j0jp78w3shdy180xbe56rq1q
  solveSet: S01j0jp78w385wjj51k0qczwn02[]
}

export interface S01j0jp78w36p4j0105ktx62my2 {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j0jp78w32nb4n1qrpqps0tpc {
  id: number
  isDnf: boolean
  scramble: string
  timeMs: number
}

export interface S01j0jp78w32f9z9gxxn53pj73v {
  id: number
  username: string
}

export interface S01j0jp78w3hv80etqdjmacvj2n {
  contest: S01j0jp78w3cy564wgr7mswngqs
  id: number
  isDnf: boolean
  reconstruction: string
  scramble: S01j0jp78w3xgqggw60nahawyh7
  submissionState: string
  timeMs: number
  user: S01j0jp78w32f9z9gxxn53pj73v
}

export interface S01j0jp78w2vyx1h1c0ygypt1q4 {
  id: number
}

export interface S01j0jp78w2v60s7vkdbd3xmnah {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  roundSession?: S01j0jp78w2scfq0yzmvkj34cb1
}

export interface S01j0jp78w2tb413af28r2bdw08 {
  extraId: number
  id: number
  isDnf: boolean
  submissionState: string
}

export interface S01j0jp78w2t8gm35m2z1thknfb {
  id: number
  username: string
}

export interface S01j0jp78w2k815qzsry6psbvwt {
  id: number
}

export interface S01j0jp78w2ds83trnc5rndd891 {
  place?: number
  roundSession: S01j0jp78w242x2rvabpc7dc4be
}

export interface S01j0jp78w2gj8vbf042mwcg4jf {
  ownRoundSession: S01j0jp78w2v60s7vkdbd3xmnah
  roundSessionSet: S01j0jp78w2ds83trnc5rndd891[]
}

export interface S01j0jp78w28989vj1c89p99091 {
  id: number
  username: string
}

export interface S01j0jp78w25fkvajw3x1w80ap7 {
  id: number
}

export interface S01j0jp78w242x2rvabpc7dc4be {
  avgMs: number
  contest: S01j0jp78w2k815qzsry6psbvwt
  createdAt: string
  discipline: S01j0jp78w2vyx1h1c0ygypt1q4
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j0jp78w2tb413af28r2bdw08[]
  updatedAt: string
  user: S01j0jp78w2t8gm35m2z1thknfb
}

export interface S01j0jp78w23pxkyrk6w5m7w6n6 {
  extraId: number
  id: number
  isDnf: boolean
  submissionState: string
}

export interface S01j0jp78w21g6sk9ea53ttjmb4 {
  id: number
}

export interface S01j0jp78w2scfq0yzmvkj34cb1 {
  avgMs: number
  contest: S01j0jp78w25fkvajw3x1w80ap7
  createdAt: string
  discipline: S01j0jp78w21g6sk9ea53ttjmb4
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j0jp78w23pxkyrk6w5m7w6n6[]
  updatedAt: string
  user: S01j0jp78w28989vj1c89p99091
}

export interface S01j0jp78w1x1j6hfadmznmsfd9 {
  id: number
}

export interface S01j0jp78w1q7yrgh57h1hkcpx3 {
  id: number
  username: string
}

export interface S01j0jp78w1n3vy43vscvshc7hv {
  id: number
}

export interface S01j0jp78w1gyv18gtw8wcab7rj {
  id: number
  name: string
  slug: string
}

export interface S01j0jp78w1dyq3q9xc2pn4n0pk {
  id: number
  name: string
  slug: string
}

export interface S01j0jp78w1bp0r2sgzfmnj1p1v {
  id: number
  moves: string
}

export interface S01j0jp78w19vwcwt3a2hy5khp5 {
  id: number
}

export interface S01j0jp78w17qzzc01v58wqga2w {
  id: number
}

export interface S01j0jp78w1334t3njtpp90hts2 {
  id: number
}

export interface S01j0jp78vtagfeeeah874v20wp {
  email: string
  pk: number
}

export interface OngoingContestRetrieve {
  id: number
  slug: string
}
