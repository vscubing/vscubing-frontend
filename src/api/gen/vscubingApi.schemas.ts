/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Vscubing Api
 * vscubing Api
 * OpenAPI spec version: 0.0.0
 */
export type ContestsSolvesSingleResultLeaderboardRetrieveParams = {
  /**
   * how many solves will be on the page
   */
  limit?: number
  /**
   * page number
   */
  page?: number
}

export type ContestsOngoingContestSubmittedSolvesRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug?: string
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsOngoingContestCurrentSolveRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsContestsLeaderboardRetrieveOrderBy =
  (typeof ContestsContestsLeaderboardRetrieveOrderBy)[keyof typeof ContestsContestsLeaderboardRetrieveOrderBy]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsContestsLeaderboardRetrieveOrderBy = {
  '-avg_ms': '-avg_ms',
  avg_ms: 'avg_ms',
} as const

export type ContestsContestsLeaderboardRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * offset
   */
  limit?: number
  /**
   * order by something
   */
  orderBy?: ContestsContestsLeaderboardRetrieveOrderBy
  /**
   * count of contest to be returned
   */
  page?: number
}

export type ContestsContestsRetrieveOrderBy =
  (typeof ContestsContestsRetrieveOrderBy)[keyof typeof ContestsContestsRetrieveOrderBy]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsContestsRetrieveOrderBy = {
  '-created_at': '-created_at',
  created_at: 'created_at',
} as const

export type ContestsContestsRetrieveParams = {
  /**
   * offset
   */
  limit?: number
  /**
   * order by something
   */
  orderBy?: ContestsContestsRetrieveOrderBy
  /**
   * count of contest to be returned
   */
  page?: number
}

export interface ContestsSolveRetrieveOutput {
  contest: S01j096njdsvqbyg0rx0rfxje0v
  discipline: S01j096njdsn0cpbjza1yg8xgye
  id: number
  isDnf: boolean
  reconstruction: string
  roundSession: S01j096njds3fr4c5pp3vdanvpr
  scramble: S01j096njdsg80w7s3md4xqqzeh
  submissionState: string
  timeMs: number
  user: S01j096njdsny8pvemyh3e022y4
}

export interface ContestsSolveListBestInEveryDiscipline {
  contest: S01j096njdtd4qyb4gw4t2fsekg
  createdAt: string
  discipline: S01j096njdt0ecxg7m8n6egsx3n
  id: number
  scramble: S01j096njds7q29811qz4gfj9hg
  timeMs: number
  user: S01j096njds78ph9tkh6xehy9py
}

export interface ContestsSingleResultLeaderboardOutput {
  limit: number
  page: number
  pages: number
  results: S01j096nje18wqvqpy73xrwq7x8
}

export interface ContestsRoundSessionWithSolvesListOutput {
  limit: number
  page: number
  pages: number
  results: S01j096njdxc7hepk1em7aexgms
}

export interface ContestsContestListOutput {
  count: number
  limit: number
  next: string
  page: number
  previous: string
  results: S01j096njdyygddww4s8jde8y47[]
}

export interface AccountsGoogleLoginOutput {
  access: string
  refresh: string
  user: S01j096njd86073qzap2arsmscr
}

export interface AccountsGoogleLoginInput {
  code: string
}

export interface AccountsCurrentUserOutput {
  authCompleted: boolean
  username: string
}

export interface AccountsChangeUsernameInput {
  /**
   * @minLength 3
   * @maxLength 20
   * @pattern ^[a-zA-Z0-9_]*$
   */
  username: string
}

export interface TokenRefresh {
  readonly access: string
  refresh: string
}

export interface S01j096nje1bt7pshcy3gw00kcr {
  id: number
  username: string
}

export interface S01j096nje155pdxngy6r4fvb0x {
  id: number
}

export interface S01j096nje15d3wvhz3tyf2mwzf {
  contest: S01j096nje155pdxngy6r4fvb0x
  id: number
  isDnf: boolean
  reconstruction: string
  scramble: S01j096nje06c1vntbnbrwsr616
  submissionState: string
  timeMs: number
  user: S01j096nje1bt7pshcy3gw00kcr
}

export interface S01j096nje10pwrcs3a5hsggjdx {
  place?: number
  solve: S01j096nje15d3wvhz3tyf2mwzf
}

export interface S01j096nje0g6bs0p3tvh7t3m1g {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  solve?: S01j096nje0rtkbxm5ksy7vmn9h
}

export interface S01j096nje18wqvqpy73xrwq7x8 {
  ownSolve: S01j096nje0g6bs0p3tvh7t3m1g
  solveSet: S01j096nje10pwrcs3a5hsggjdx[]
}

export interface S01j096nje0edpere8vxvpr6rt0 {
  id: number
}

export interface S01j096nje0rtkbxm5ksy7vmn9h {
  contest: S01j096nje0edpere8vxvpr6rt0
  id: number
  isDnf: boolean
  reconstruction: string
  submissionState: string
  timeMs: number
}

export interface S01j096nje06c1vntbnbrwsr616 {
  id: number
}

export interface S01j096njdzw8q22gzgkndvfhas {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j096njdzgx7543678qqqh80j {
  canChangeToExtra: boolean
}

export interface S01j096njdz4axcyxm9cce232j1 {
  id: number
  isDnf: boolean
  timeMs: number
}

export interface S01j096njdyygddww4s8jde8y47 {
  endDate: string
  id: number
  name: string
  slug: string
  startDate: string
}

export interface S01j096njdxdkhkpwxbpbaafd1h {
  place?: number
  roundSession: S01j096njdxm0d668ayzvpsj59c
}

export interface S01j096njdxc7hepk1em7aexgms {
  ownRoundSession: S01j096njdwrzhdjana7gjfwf3s
  roundSessionSet: S01j096njdxdkhkpwxbpbaafd1h[]
}

export interface S01j096njdxapmytvgm8m3ncjt5 {
  extraId: number
  id: number
  isDnf: boolean
  submissionState: string
}

export interface S01j096njdwvxf0dpbz4rvfaf9c {
  id: number
  username: string
}

export interface S01j096njdwrgx7exthpy5ad6nn {
  avgMs: number
  contest: S01j096njdw81tx9315m4ba5j9b
  createdAt: string
  discipline: S01j096njdwcbpsjyav6zsbrz0y
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j096njdw2pk0xnpmgx16k5y0[]
  updatedAt: string
  user: S01j096njdwvxf0dpbz4rvfaf9c
}

export interface S01j096njdwrzhdjana7gjfwf3s {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  roundSession?: S01j096njdwrgx7exthpy5ad6nn
}

export interface S01j096njdwn17aahvqwk8byetb {
  id: number
}

export interface S01j096njdwknbsg9pvbqjvjf7k {
  id: number
  username: string
}

export interface S01j096njdwcbpsjyav6zsbrz0y {
  id: number
}

export interface S01j096njdw8hn0ddg9c4q12va6 {
  id: number
}

export interface S01j096njdxm0d668ayzvpsj59c {
  avgMs: number
  contest: S01j096njdwn17aahvqwk8byetb
  createdAt: string
  discipline: S01j096njdw8hn0ddg9c4q12va6
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j096njdxapmytvgm8m3ncjt5[]
  updatedAt: string
  user: S01j096njdwknbsg9pvbqjvjf7k
}

export interface S01j096njdw81tx9315m4ba5j9b {
  id: number
}

export interface S01j096njdw2pk0xnpmgx16k5y0 {
  extraId: number
  id: number
  isDnf: boolean
  submissionState: string
}

export interface S01j096njdtd4qyb4gw4t2fsekg {
  id: number
  name: string
  slug: string
}

export interface S01j096njdt0ecxg7m8n6egsx3n {
  id: number
  name: string
  slug: string
}

export interface S01j096njdsvqbyg0rx0rfxje0v {
  id: number
}

export interface S01j096njdsny8pvemyh3e022y4 {
  id: number
}

export interface S01j096njdsn0cpbjza1yg8xgye {
  id: number
}

export interface S01j096njdsg80w7s3md4xqqzeh {
  id: number
}

export interface S01j096njds7q29811qz4gfj9hg {
  id: number
  moves: string
}

export interface S01j096njds78ph9tkh6xehy9py {
  id: number
  username: string
}

export interface S01j096njds3fr4c5pp3vdanvpr {
  id: number
}

export interface S01j096njd86073qzap2arsmscr {
  email: string
  pk: number
}

export interface Output {
  currentScramble: S01j096njdzw8q22gzgkndvfhas
  currentSolve: S01j096njdz4axcyxm9cce232j1
  info: S01j096njdzgx7543678qqqh80j
}

export interface OngoingContestRetrieve {
  id: number
  slug: string
}
