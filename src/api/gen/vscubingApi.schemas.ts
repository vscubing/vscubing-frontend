/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Vscubing Api
 * vscubing Api
 * OpenAPI spec version: 0.0.0
 */
export type ContestsSolvesSingleResultLeaderboardRetrieveParams = {
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsOngoingContestSolveCreateCreateParams = {
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * scramble_id
   */
  scrambleId: number
}

export type ContestsOngoingContestCurrentRoundSessionProgressRetrieveParams = {
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsOngoingContestSubmitCreateAction =
  (typeof ContestsOngoingContestSubmitCreateAction)[keyof typeof ContestsOngoingContestSubmitCreateAction]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContestsOngoingContestSubmitCreateAction = {
  change_to_extra: 'change_to_extra',
  submit: 'submit',
} as const

export type ContestsOngoingContestSubmitCreateParams = {
  /**
   * action
   */
  action: ContestsOngoingContestSubmitCreateAction
  /**
   * discipline slug
   */
  disciplineSlug: string
}

export type ContestsContestsLeaderboardRetrieveParams = {
  /**
   * contest slug
   */
  contestSlug: string
  /**
   * discipline slug
   */
  disciplineSlug: string
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export type ContestsContestsRetrieveParams = {
  /**
   * page
   */
  page?: number
  /**
   * page size
   */
  pageSize?: number
}

export interface ContestsSolveRetrieveOutput {
  contest: S01j32qsywdy3p22726y21h3hth
  discipline: S01j32qsywda2f1nmhbkq8d2mx5
  id: number
  isDnf: boolean
  reconstruction: string
  roundSession: S01j32qsywdkrha3zyq41t7eppn
  scramble: S01j32qsywdwaha1zrzgrn4gq0a
  submissionState: string
  timeMs: number
  user: S01j32qsywd454hf6aesdb6eeqp
}

export interface ContestsSolveListBestInEveryDiscipline {
  contest: S01j32qsywd5zpnykftyryhmqsn
  createdAt: string
  discipline: S01j32qsywdsp5nga7b7dbd3dg1
  id: number
  scramble: S01j32qsywdb2pnjcmvhtk9mgpy
  timeMs: number
  user: S01j32qsywdtsc8k402d1nknx91
}

export interface ContestsSingleResultLeaderboardOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j32qsywg8dg3bpgks5xdm8v2
}

export interface ContestsRoundSessionWithSolvesListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j32qsywfyh9s4q4v0we3yjcd
}

export interface ContestsCurrentSolveOutput {
  currentSolve: S01j32qsywfbyj3gfd6qrzexjxa
  submittedSolveSet?: S01j32qsywfybcn9wqr0rdc2tze[]
}

export interface ContestsCreateSolveOutput {
  createdAt: string
  id: number
  isDnf: boolean
  scramble: S01j32qsywe9m737j5fht5jqm2h
  timeMs: number
}

export interface ContestsCreateSolveInput {
  isDnf: boolean
  reconstruction: string
  timeMs: number
}

export interface ContestsContestListOutput {
  page: number
  pages: number
  pageSize: number
  results: S01j32qsywfx96585ma0yj3nncr[]
}

export interface AccountsGoogleLoginOutput {
  access: string
  refresh: string
  user: S01j32qsyw5d79p7f2teb008f9t
}

export interface AccountsGoogleLoginInput {
  code: string
}

export interface AccountsCurrentUserOutput {
  id: number
  isVerified: boolean
  username: string
}

export interface AccountsChangeUsernameInput {
  /**
   * @minLength 3
   * @maxLength 20
   * @pattern ^[a-zA-Z0-9_]*$
   */
  username: string
}

export interface TokenRefresh {
  readonly access: string
  refresh: string
}

export interface S01j32qsywgww6hpbtf1nf0y467 {
  id: number
  slug: string
}

export interface S01j32qsywgqj8dyqtdf7xewzrv {
  place: number
  solve: S01j32qsywg9c0jftv78xthrteg
}

export interface S01j32qsywgmg68m2n5q2jgzsap {
  id: number
  username: string
}

export interface S01j32qsywgm2szd4q6hpdj90mz {
  isDisplayedSeparately: boolean
  page: number
  place: number
  solve: S01j32qsywgff6teahct50fn77e
}

export interface S01j32qsywggxs9q38wja3ykhbk {
  id: number
  slug: string
}

export interface S01j32qsywgff6teahct50fn77e {
  contest: S01j32qsywggxs9q38wja3ykhbk
  createdAt: string
  id: number
  isDnf: boolean
  timeMs: number
}

export interface S01j32qsywg9c0jftv78xthrteg {
  contest: S01j32qsywgww6hpbtf1nf0y467
  createdAt: string
  id: number
  isDnf: boolean
  timeMs: number
  user: S01j32qsywgmg68m2n5q2jgzsap
}

export interface S01j32qsywg8dg3bpgks5xdm8v2 {
  ownResult?: S01j32qsywgm2szd4q6hpdj90mz
  solveSet: S01j32qsywgqj8dyqtdf7xewzrv[]
}

export interface S01j32qsywfyh9s4q4v0we3yjcd {
  ownResult: S01j32qsyweq3ga6ncsyjjqwtcy
  roundSessionSet: S01j32qsywfc6hwj0jywfh5yzv1[]
}

export interface S01j32qsywfybcn9wqr0rdc2tze {
  solve: S01j32qsywffj4bf0r1n6vy0trp
}

export interface S01j32qsywfxvby59j93zktfme4 {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j32qsywfx96585ma0yj3nncr {
  endDate: string
  id: number
  name: string
  slug: string
  startDate: string
}

export interface S01j32qsywffj4bf0r1n6vy0trp {
  id: number
  isDnf: boolean
  scramble: S01j32qsywfap18gyfteqtzq4kg
  timeMs: number
}

export interface S01j32qsywfca1rgzprf2wehwv6 {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j32qsywfc6hwj0jywfh5yzv1 {
  place?: number
  roundSession: S01j32qsywesfv05vvb70fez14e
}

export interface S01j32qsywfbyj3gfd6qrzexjxa {
  canChangeToExtra: boolean
  scramble: S01j32qsywfca1rgzprf2wehwv6
  solve?: S01j32qsywf0s1g0pn1skmh9y7j
}

export interface S01j32qsywfap18gyfteqtzq4kg {
  id: number
  isExtra: boolean
  moves: string
  position: string
}

export interface S01j32qsywf0s1g0pn1skmh9y7j {
  id: number
  isDnf: boolean
  scramble: S01j32qsywfxvby59j93zktfme4
  timeMs: number
}

export interface S01j32qsywesfv05vvb70fez14e {
  avgMs: number
  contest: S01j32qsywebgex162yq3xwscy4
  createdAt: string
  discipline: S01j32qsywe4ews110f92bwsv90
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j32qsyweda48dr3tvx9e9530[]
  updatedAt: string
  user: S01j32qsywe2hhm4cpypfryr1wh
}

export interface S01j32qsyweq3ga6ncsyjjqwtcy {
  isDisplayedSeparately?: boolean
  page?: number
  place?: number
  roundSession?: S01j32qsywegfh8q3gqq56k733z
}

export interface S01j32qsywehw4fb07w4y59mesm {
  id: number
}

export interface S01j32qsywegfh8q3gqq56k733z {
  avgMs: number
  contest: S01j32qsywehw4fb07w4y59mesm
  createdAt: string
  discipline: S01j32qsywe30jmj92aqyc264wb
  id: number
  isDnf: boolean
  isFinished: boolean
  solveSet: S01j32qsywe43kjyt42tnerq9zk[]
  updatedAt: string
  user: S01j32qsywebk08jgq3bqm0n2rx
}

export interface S01j32qsyweda48dr3tvx9e9530 {
  extraId: number
  id: number
  isDnf: boolean
  scramble: S01j32qsywe30czz8p5scq55zp7
  submissionState: string
  timeMs: number
}

export interface S01j32qsywebk08jgq3bqm0n2rx {
  id: number
  username: string
}

export interface S01j32qsywebgex162yq3xwscy4 {
  id: number
}

export interface S01j32qsywebc5qw1rtz771g80z {
  id: number
  position: string
}

export interface S01j32qsywe9m737j5fht5jqm2h {
  id: number
  moves: string
}

export interface S01j32qsywe4ews110f92bwsv90 {
  id: number
}

export interface S01j32qsywe43kjyt42tnerq9zk {
  extraId: number
  id: number
  isDnf: boolean
  scramble: S01j32qsywebc5qw1rtz771g80z
  submissionState: string
  timeMs: number
}

export interface S01j32qsywe30jmj92aqyc264wb {
  id: number
}

export interface S01j32qsywe30czz8p5scq55zp7 {
  id: number
  position: string
}

export interface S01j32qsywe2hhm4cpypfryr1wh {
  id: number
  username: string
}

export interface S01j32qsywdy3p22726y21h3hth {
  id: number
}

export interface S01j32qsywdwaha1zrzgrn4gq0a {
  id: number
}

export interface S01j32qsywdtsc8k402d1nknx91 {
  id: number
  username: string
}

export interface S01j32qsywdsp5nga7b7dbd3dg1 {
  id: number
  name: string
  slug: string
}

export interface S01j32qsywdkrha3zyq41t7eppn {
  id: number
}

export interface S01j32qsywdb2pnjcmvhtk9mgpy {
  id: number
  moves: string
}

export interface S01j32qsywda2f1nmhbkq8d2mx5 {
  id: number
}

export interface S01j32qsywd5zpnykftyryhmqsn {
  id: number
  name: string
  slug: string
}

export interface S01j32qsywd454hf6aesdb6eeqp {
  id: number
}

export interface S01j32qsyw5d79p7f2teb008f9t {
  email: string
  pk: number
}

export interface OngoingContestRetrieve {
  endDate: string
  id: number
  slug: string
  startDate: string
}

export interface Input {
  idDnf: boolean
}
